---
### Configuring all hosts
- hosts: finalsrv
  become: yes
  gather_facts: no

  pre_tasks:
    - raw: sudo setenforce 0

  tasks:
    - name: Disable SELinux
      selinux: state=disabled

    - name: install dependencies
      yum:
        name: "{{ package }} "
        state: latest

      vars:
        package:
        - python3
        - python3-pip
        - snapd
        - wget
        - java-1.8.0-openjdk-devel
        - git
        - nginx
        - mc
        - telnet

    - name: Install snapd 2 step
      shell: sudo systemctl enable --now snapd.socket

    - name: Install snapd 3 step
      shell: sudo ln -fs /var/lib/snapd/snap /snap

    - name: Install snapd 4 step
      shell: sudo systemctl start snapd

    - name: Remove certbot-auto and any Certbot OS packages
      yum: name=certbot state=absent

    - name: Install Certbot step 1
      shell: sudo snap install --classic certbot

    - name: Install Certbot step 2
      shell: sudo ln -fs /snap/bin/certbot /usr/bin/certbot

    - name: Create directory /var/www
      ansible.builtin.file:
        path: /var/www
        state: directory
        owner: nginx
        group: nginx
        mode: '0755'

    - name: Create directory /var/www/html
      ansible.builtin.file:
        path: /var/www/html
        state: directory
        owner: nginx
        group: nginx
        mode: '0755'

    - name: Create directory /var/www/{{ domain_name }}
      ansible.builtin.file:
        path: /var/www/{{ domain_name }}
        state: directory
        owner: nginx
        group: nginx
        mode: '0755'

    - name: Install system nginx config
      template:
        src: ./templates/nginx-template.conf
        dest: /etc/nginx/nginx.conf

    - name: Start nginx service
      service: name=nginx state=started enabled=yes

    - name: Create letsencrypt certificate
      shell: sudo certbot certonly --webroot -w /var/www/html --non-interactive --agree-tos -m {{ letsencrypt_email }} -d {{ domain_name }} -d {{ www_domain_name }}

    - name: Add letsencrypt cronjob for cert renewal
      cron:
       name: letsencrypt_renewal
       special_time: weekly
       job: certbot --renew certonly -n --webroot -w /var/www/{{ domain_name }} -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }} && service nginx reload

### Docker install to all hosts
    - name: Install docker repo
      shell:  yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

    - name: Install Docker
      yum:
        name: docker-ce
        state: present

    - name: Install Docker-ce-cli
      yum:
        name: docker-ce-cli
        state: present

    - name: Install Contariner.IO
      yum:
        name: containerd.io
        state: present

    - name: add user to docker
      shell: usermod -aG docker sneogcp01

    - name: enable docker
      systemd:
       name: docker
       enabled: true

    - name: start docker
      systemd:
        name: docker
        state: started

### Jenkins host configuring
- hosts: jenkinssrv1
  become: yes
  gather_facts: no

  tasks:
    - name: download jenkins.repo
      get_url:
       url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
       dest: /etc/yum.repos.d/jenkins.repo

    - name: import jenkins key
      rpm_key:
       state: present
       key: https://pkg.jenkins.io/redhat-stable/jenkins.io.key

    - name: install jenkins
      yum:
       name: jenkins
       state: latest

    - name: Temporarily Stop Jenkins
      service: 
       name: jenkins 
       state: stopped

    - name: Delete Jenkins default dir
      file:
       state: absent
       path: /var/lib/jenkins

    - name: Copy working Jenkins environment
      copy:
       src: ./files/jenkins.tar.gz
       dest: /var/lib

    - name: prepare Jenkins
      shell: tar -C /var/lib -xvzf /var/lib/jenkins.tar.gz

    - name: Restore jenkins user ownership on /var/lib/jenkins
      file:
       path: /var/lib/jenkins
       state: directory
       recurse: yes
       owner: jenkins
       group: jenkins

    - name: start jenkins
      systemd:
       name: jenkins
       state: started

    - name: enable jenkins
      systemd:
       name: jenkins
       enabled: true

    - name: Install system nginx jenkins config
      template:
        src: ./templates/jenkins.nginx.template.conf
        dest: /etc/nginx/nginx.conf

    - name: Start nginx service
      service: name=nginx state=restarted

    - name: add user jenkins to docker group
      shell: usermod -aG docker jenkins

    - name: Create directory /var/lib/jenkins/.ssh
      ansible.builtin.file:
        path: /var/lib/jenkins/.ssh
        state: directory
        owner: jenkins
        group: jenkins
        mode: '0700'

    - name: Copy my ssh key 
      copy:
       src: ./gcpkey01.pem
       dest: /var/lib/jenkins/.ssh

    - name: Change file ownership, group and permissions
      ansible.builtin.file:
       path: /var/lib/jenkins/.ssh/gcpkey01.pem
       owner: jenkins
       group: jenkins
       mode: '0600'

    - name: install ansible
      yum:
       name: ansible
       state: latest

    - name: Create directory /var/lib/jenkins/.ansible
      ansible.builtin.file:
        path: /var/lib/jenkins/.ansible
        state: directory
        owner: jenkins
        group: jenkins
        mode: '0755'

    - name: Copy ansible hosts inventory file
      template:
       src: templates/hosts.template
       dest: /var/lib/jenkins/.ansible/hosts

    - name: Copy ansible hosts playbook file
      template:
       src: templates/docker-petclinic.yml
       dest: /var/lib/jenkins/.ansible/docker-petclinic.yml

    - name: Change file ownership, group and permissions to /var/lib/jenkins/.ansible
      ansible.builtin.file:
       path: /var/lib/jenkins/.ansible
       recurse: yes
       owner: jenkins
       group: jenkins

    - name: Restart jenkins service
      service: name=jenkins state=restarted

- hosts: prodsrv1
  become: yes
  gather_facts: no

  tasks:

    - name: Install prepared nginx config for prod app
      template:
        src: templates/java.nginx.template.conf
        dest: /etc/nginx/nginx.conf

    - name: Restart nginx service
      service: name=nginx state=restarted
