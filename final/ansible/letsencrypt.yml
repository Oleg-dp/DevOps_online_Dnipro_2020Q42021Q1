---
- hosts: final
  become: yes
  gather_facts: no

  pre_tasks:
    - raw: yum install -y python3 python3-pip snapd

  tasks:
#    - name: Install snapd
#      yum: name=snapd state=latest enabled=yes

    - name: Install snapd 2 step
      shell: sudo systemctl enable --now snapd.socket

    - name: Install snapd 3 step
      shell: sudo ln -fs /var/lib/snapd/snap /snap

    - name: Install snapd 4 step
      shell: sudo systemctl start snapd

    - name: Remove certbot-auto and any Certbot OS packages
      yum: name=certbot state=absent

    - name: Install Certbot
      shell: sudo snap install --classic certbot

    - name: Install Certbot step 2
      shell: sudo ln -fs /snap/bin/certbot /usr/bin/certbot

    - name: Create directory /var/www
      ansible.builtin.file:
        path: /var/www
        state: directory
        owner: nginx
        group: nginx
        mode: '0755'

    - name: Create directory /var/www/html
      ansible.builtin.file:
        path: /var/www/html
        state: directory
        owner: nginx
        group: nginx
        mode: '0755'

    - name: Create directory /var/www/{{ domain_name }}
      ansible.builtin.file:
        path: /var/www/{{ domain_name }}
        state: directory
        owner: nginx
        group: nginx
        mode: '0755'

    - name: Install nginx
      yum: name=nginx state=present

    - name: Install system nginx config
      template:
        src: templates/sneo.conf
        dest: /etc/nginx/nginx.conf

    - name: Start nginx service
      service: name=nginx state=started enabled=yes

    - name: Create letsencrypt certificate
      shell: sudo certbot certonly --webroot -w /var/www/html --non-interactive --agree-tos -m {{ letsencrypt_email }} -d {{ domain_name }} -d {{ www_domain_name }}

    - name: Install system nginx Final config
      template:
        src: templates/sneo.conf.final
        dest: /etc/nginx/nginx.conf

    - name: Copy my site files
      copy:
       src: ./files/
       dest: /var/www/{{ domain_name }}

    - name: Start nginx service
      service: name=nginx state=restarted

    - name: Add letsencrypt cronjob for cert renewal
      cron:
       name: letsencrypt_renewal
       special_time: weekly
       job: certbot --renew certonly -n --webroot -w /var/www/{{ domain_name }} -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }} && service nginx reload
